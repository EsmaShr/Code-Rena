{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lilijiaxin/Desktop/codesmith/code-rena/code-rena/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom'; // import 'bootstrap/dist/css/bootstrap.min.css';\n// import { Button, Card, Alert } from 'react-bootstrap';\n// first we will make a new context\n\nconst MyContext = /*#__PURE__*/React.createContext(); // Then create a provider Component\n\nclass MyProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: 'Hello',\n      players: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n      value: {\n        state: this.state,\n        //add method to the context api to be used in the children components\n        growAYearOlder: () => console.log('this is a method')\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n} // class App extends Component {\n//   render() {\n//     return (\n//       <MyProvider>\n//         <>\n//           <Router>\n//             {/* switch component serves as a child component to all the links without having to reload  */}\n//             <Switch>\n//               <Link to=\"/home\">Home</Link>\n//             </Switch>\n//             <Switch>\n//               <Link to=\"/arena\">Arena</Link>\n//             </Switch>\n//             <h1>React component mounting!</h1>\n//           </Router>\n//         </>\n//       </MyProvider>\n//     );\n//   }\n// }\n//export default App;","map":{"version":3,"sources":["/Users/lilijiaxin/Desktop/codesmith/code-rena/code-rena/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Link","MyContext","createContext","MyProvider","state","name","players","render","growAYearOlder","console","log","props","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,IAAjD,QAA6D,kBAA7D,C,CACA;AACA;AAEA;;AACA,MAAMC,SAAS,gBAAGP,KAAK,CAACQ,aAAN,EAAlB,C,CACA;;AACA,MAAMC,UAAN,SAAyBR,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCS,KADiC,GACzB;AACNC,MAAAA,IAAI,EAAE,OADA;AAENC,MAAAA,OAAO,EAAE;AAFH,KADyB;AAAA;;AAKjCC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,SAAD,CAAW,QAAX;AACE,MAAA,KAAK,EAAE;AACLH,QAAAA,KAAK,EAAE,KAAKA,KADP;AAEL;AACAI,QAAAA,cAAc,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAHjB,OADT;AAAA,gBAOG,KAAKC,KAAL,CAAWC;AAPd;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAjBgC,C,CAoBnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import { Button, Card, Alert } from 'react-bootstrap';\n\n// first we will make a new context\nconst MyContext = React.createContext();\n// Then create a provider Component\nclass MyProvider extends Component {\n  state = {\n    name: 'Hello',\n    players: [],\n  };\n  render() {\n    return (\n      <MyContext.Provider\n        value={{\n          state: this.state,\n          //add method to the context api to be used in the children components\n          growAYearOlder: () => console.log('this is a method'),\n        }}>\n        {/* passing the sate to the children */}\n        {this.props.children}\n      </MyContext.Provider>\n    );\n  }\n}\n\n// class App extends Component {\n//   render() {\n//     return (\n//       <MyProvider>\n//         <>\n//           <Router>\n//             {/* switch component serves as a child component to all the links without having to reload  */}\n//             <Switch>\n//               <Link to=\"/home\">Home</Link>\n//             </Switch>\n//             <Switch>\n//               <Link to=\"/arena\">Arena</Link>\n//             </Switch>\n//             <h1>React component mounting!</h1>\n//           </Router>\n//         </>\n//       </MyProvider>\n//     );\n//   }\n// }\n//export default App;\n"]},"metadata":{},"sourceType":"module"}